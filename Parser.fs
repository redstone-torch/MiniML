// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 ".\HindleyMilner\Parser.fsy"

open Type
open Ast

let private listToApply = function
    | first :: xs -> List.fold (fun apply exp -> App(apply, exp)) first xs
    | _ -> raise (failwith "impossible")

let rec private createLam body ids =
    match ids with
    | [] -> body
    | [id] -> Lam(id, body)
    | id :: xs -> Lam(id, createLam body xs)

let private createBinaryOp left op right = App(App(Val op, left), right)

let private createUnaryOp op expr = App(Val op, expr)

# 25 ".\HindleyMilner\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | EQUAL_EQUAL
  | UN_EQUAL
  | LESS
  | LESS_EQ
  | GREATER
  | GREATER_EQ
  | LESS_DOT
  | LESS_EQ_DOT
  | GREATER_DOT
  | GREATER_EQ_DOT
  | PLUS
  | MINUS
  | MULTIPLE
  | DIVIDE
  | REMAINDER
  | PLUS_DOT
  | MINUS_DOT
  | MULTIPLE_DOT
  | DIVIDE_DOT
  | DO
  | LET
  | REC
  | EQUAL
  | IN
  | FUN
  | RIGHT_ARROW
  | IF
  | THEN
  | ELSE
  | CASE
  | OF
  | PIPE
  | TYPE
  | COLON_COLON
  | PLUS_PLUS
  | AT
  | LEFT_BRACKET
  | RIGHT_BRACKET
  | COMMA
  | SEMICOLON
  | LEFT_S_BRACKET
  | RIGHT_S_BRACKET
  | IDENTITY of (string)
  | STRING of (string)
  | REAL of (double)
  | BOOL of (bool)
  | INT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_EQUAL_EQUAL
    | TOKEN_UN_EQUAL
    | TOKEN_LESS
    | TOKEN_LESS_EQ
    | TOKEN_GREATER
    | TOKEN_GREATER_EQ
    | TOKEN_LESS_DOT
    | TOKEN_LESS_EQ_DOT
    | TOKEN_GREATER_DOT
    | TOKEN_GREATER_EQ_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_MULTIPLE
    | TOKEN_DIVIDE
    | TOKEN_REMAINDER
    | TOKEN_PLUS_DOT
    | TOKEN_MINUS_DOT
    | TOKEN_MULTIPLE_DOT
    | TOKEN_DIVIDE_DOT
    | TOKEN_DO
    | TOKEN_LET
    | TOKEN_REC
    | TOKEN_EQUAL
    | TOKEN_IN
    | TOKEN_FUN
    | TOKEN_RIGHT_ARROW
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_CASE
    | TOKEN_OF
    | TOKEN_PIPE
    | TOKEN_TYPE
    | TOKEN_COLON_COLON
    | TOKEN_PLUS_PLUS
    | TOKEN_AT
    | TOKEN_LEFT_BRACKET
    | TOKEN_RIGHT_BRACKET
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_LEFT_S_BRACKET
    | TOKEN_RIGHT_S_BRACKET
    | TOKEN_IDENTITY
    | TOKEN_STRING
    | TOKEN_REAL
    | TOKEN_BOOL
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__starttexpr
    | NONTERM__startprogram
    | NONTERM_program
    | NONTERM_literature
    | NONTERM_idTuple
    | NONTERM_identities
    | NONTERM_tuple
    | NONTERM_list'
    | NONTERM_list
    | NONTERM_binaryOp
    | NONTERM_caseList
    | NONTERM_constructor
    | NONTERM_constructors
    | NONTERM_identityTuple
    | NONTERM_caseBranche
    | NONTERM_caseBranches
    | NONTERM_apply
    | NONTERM_expr
    | NONTERM_ttuple
    | NONTERM_adtParams
    | NONTERM_texpr

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | EQUAL_EQUAL  -> 1 
  | UN_EQUAL  -> 2 
  | LESS  -> 3 
  | LESS_EQ  -> 4 
  | GREATER  -> 5 
  | GREATER_EQ  -> 6 
  | LESS_DOT  -> 7 
  | LESS_EQ_DOT  -> 8 
  | GREATER_DOT  -> 9 
  | GREATER_EQ_DOT  -> 10 
  | PLUS  -> 11 
  | MINUS  -> 12 
  | MULTIPLE  -> 13 
  | DIVIDE  -> 14 
  | REMAINDER  -> 15 
  | PLUS_DOT  -> 16 
  | MINUS_DOT  -> 17 
  | MULTIPLE_DOT  -> 18 
  | DIVIDE_DOT  -> 19 
  | DO  -> 20 
  | LET  -> 21 
  | REC  -> 22 
  | EQUAL  -> 23 
  | IN  -> 24 
  | FUN  -> 25 
  | RIGHT_ARROW  -> 26 
  | IF  -> 27 
  | THEN  -> 28 
  | ELSE  -> 29 
  | CASE  -> 30 
  | OF  -> 31 
  | PIPE  -> 32 
  | TYPE  -> 33 
  | COLON_COLON  -> 34 
  | PLUS_PLUS  -> 35 
  | AT  -> 36 
  | LEFT_BRACKET  -> 37 
  | RIGHT_BRACKET  -> 38 
  | COMMA  -> 39 
  | SEMICOLON  -> 40 
  | LEFT_S_BRACKET  -> 41 
  | RIGHT_S_BRACKET  -> 42 
  | IDENTITY _ -> 43 
  | STRING _ -> 44 
  | REAL _ -> 45 
  | BOOL _ -> 46 
  | INT _ -> 47 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_EQUAL_EQUAL 
  | 2 -> TOKEN_UN_EQUAL 
  | 3 -> TOKEN_LESS 
  | 4 -> TOKEN_LESS_EQ 
  | 5 -> TOKEN_GREATER 
  | 6 -> TOKEN_GREATER_EQ 
  | 7 -> TOKEN_LESS_DOT 
  | 8 -> TOKEN_LESS_EQ_DOT 
  | 9 -> TOKEN_GREATER_DOT 
  | 10 -> TOKEN_GREATER_EQ_DOT 
  | 11 -> TOKEN_PLUS 
  | 12 -> TOKEN_MINUS 
  | 13 -> TOKEN_MULTIPLE 
  | 14 -> TOKEN_DIVIDE 
  | 15 -> TOKEN_REMAINDER 
  | 16 -> TOKEN_PLUS_DOT 
  | 17 -> TOKEN_MINUS_DOT 
  | 18 -> TOKEN_MULTIPLE_DOT 
  | 19 -> TOKEN_DIVIDE_DOT 
  | 20 -> TOKEN_DO 
  | 21 -> TOKEN_LET 
  | 22 -> TOKEN_REC 
  | 23 -> TOKEN_EQUAL 
  | 24 -> TOKEN_IN 
  | 25 -> TOKEN_FUN 
  | 26 -> TOKEN_RIGHT_ARROW 
  | 27 -> TOKEN_IF 
  | 28 -> TOKEN_THEN 
  | 29 -> TOKEN_ELSE 
  | 30 -> TOKEN_CASE 
  | 31 -> TOKEN_OF 
  | 32 -> TOKEN_PIPE 
  | 33 -> TOKEN_TYPE 
  | 34 -> TOKEN_COLON_COLON 
  | 35 -> TOKEN_PLUS_PLUS 
  | 36 -> TOKEN_AT 
  | 37 -> TOKEN_LEFT_BRACKET 
  | 38 -> TOKEN_RIGHT_BRACKET 
  | 39 -> TOKEN_COMMA 
  | 40 -> TOKEN_SEMICOLON 
  | 41 -> TOKEN_LEFT_S_BRACKET 
  | 42 -> TOKEN_RIGHT_S_BRACKET 
  | 43 -> TOKEN_IDENTITY 
  | 44 -> TOKEN_STRING 
  | 45 -> TOKEN_REAL 
  | 46 -> TOKEN_BOOL 
  | 47 -> TOKEN_INT 
  | 50 -> TOKEN_end_of_input
  | 48 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__starttexpr 
    | 1 -> NONTERM__startprogram 
    | 2 -> NONTERM_program 
    | 3 -> NONTERM_literature 
    | 4 -> NONTERM_literature 
    | 5 -> NONTERM_literature 
    | 6 -> NONTERM_literature 
    | 7 -> NONTERM_literature 
    | 8 -> NONTERM_idTuple 
    | 9 -> NONTERM_idTuple 
    | 10 -> NONTERM_identities 
    | 11 -> NONTERM_identities 
    | 12 -> NONTERM_tuple 
    | 13 -> NONTERM_tuple 
    | 14 -> NONTERM_list' 
    | 15 -> NONTERM_list' 
    | 16 -> NONTERM_list 
    | 17 -> NONTERM_list 
    | 18 -> NONTERM_list 
    | 19 -> NONTERM_binaryOp 
    | 20 -> NONTERM_binaryOp 
    | 21 -> NONTERM_binaryOp 
    | 22 -> NONTERM_binaryOp 
    | 23 -> NONTERM_binaryOp 
    | 24 -> NONTERM_binaryOp 
    | 25 -> NONTERM_binaryOp 
    | 26 -> NONTERM_binaryOp 
    | 27 -> NONTERM_binaryOp 
    | 28 -> NONTERM_binaryOp 
    | 29 -> NONTERM_binaryOp 
    | 30 -> NONTERM_binaryOp 
    | 31 -> NONTERM_binaryOp 
    | 32 -> NONTERM_binaryOp 
    | 33 -> NONTERM_binaryOp 
    | 34 -> NONTERM_binaryOp 
    | 35 -> NONTERM_binaryOp 
    | 36 -> NONTERM_binaryOp 
    | 37 -> NONTERM_binaryOp 
    | 38 -> NONTERM_binaryOp 
    | 39 -> NONTERM_binaryOp 
    | 40 -> NONTERM_binaryOp 
    | 41 -> NONTERM_caseList 
    | 42 -> NONTERM_caseList 
    | 43 -> NONTERM_constructor 
    | 44 -> NONTERM_constructor 
    | 45 -> NONTERM_constructors 
    | 46 -> NONTERM_constructors 
    | 47 -> NONTERM_identityTuple 
    | 48 -> NONTERM_identityTuple 
    | 49 -> NONTERM_caseBranche 
    | 50 -> NONTERM_caseBranche 
    | 51 -> NONTERM_caseBranche 
    | 52 -> NONTERM_caseBranches 
    | 53 -> NONTERM_caseBranches 
    | 54 -> NONTERM_apply 
    | 55 -> NONTERM_apply 
    | 56 -> NONTERM_expr 
    | 57 -> NONTERM_expr 
    | 58 -> NONTERM_expr 
    | 59 -> NONTERM_expr 
    | 60 -> NONTERM_expr 
    | 61 -> NONTERM_expr 
    | 62 -> NONTERM_expr 
    | 63 -> NONTERM_expr 
    | 64 -> NONTERM_expr 
    | 65 -> NONTERM_expr 
    | 66 -> NONTERM_expr 
    | 67 -> NONTERM_expr 
    | 68 -> NONTERM_expr 
    | 69 -> NONTERM_expr 
    | 70 -> NONTERM_expr 
    | 71 -> NONTERM_expr 
    | 72 -> NONTERM_expr 
    | 73 -> NONTERM_expr 
    | 74 -> NONTERM_expr 
    | 75 -> NONTERM_ttuple 
    | 76 -> NONTERM_ttuple 
    | 77 -> NONTERM_adtParams 
    | 78 -> NONTERM_adtParams 
    | 79 -> NONTERM_texpr 
    | 80 -> NONTERM_texpr 
    | 81 -> NONTERM_texpr 
    | 82 -> NONTERM_texpr 
    | 83 -> NONTERM_texpr 
    | 84 -> NONTERM_texpr 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 50 
let _fsyacc_tagOfErrorTerminal = 48

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | EQUAL_EQUAL  -> "EQUAL_EQUAL" 
  | UN_EQUAL  -> "UN_EQUAL" 
  | LESS  -> "LESS" 
  | LESS_EQ  -> "LESS_EQ" 
  | GREATER  -> "GREATER" 
  | GREATER_EQ  -> "GREATER_EQ" 
  | LESS_DOT  -> "LESS_DOT" 
  | LESS_EQ_DOT  -> "LESS_EQ_DOT" 
  | GREATER_DOT  -> "GREATER_DOT" 
  | GREATER_EQ_DOT  -> "GREATER_EQ_DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | MULTIPLE  -> "MULTIPLE" 
  | DIVIDE  -> "DIVIDE" 
  | REMAINDER  -> "REMAINDER" 
  | PLUS_DOT  -> "PLUS_DOT" 
  | MINUS_DOT  -> "MINUS_DOT" 
  | MULTIPLE_DOT  -> "MULTIPLE_DOT" 
  | DIVIDE_DOT  -> "DIVIDE_DOT" 
  | DO  -> "DO" 
  | LET  -> "LET" 
  | REC  -> "REC" 
  | EQUAL  -> "EQUAL" 
  | IN  -> "IN" 
  | FUN  -> "FUN" 
  | RIGHT_ARROW  -> "RIGHT_ARROW" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | CASE  -> "CASE" 
  | OF  -> "OF" 
  | PIPE  -> "PIPE" 
  | TYPE  -> "TYPE" 
  | COLON_COLON  -> "COLON_COLON" 
  | PLUS_PLUS  -> "PLUS_PLUS" 
  | AT  -> "AT" 
  | LEFT_BRACKET  -> "LEFT_BRACKET" 
  | RIGHT_BRACKET  -> "RIGHT_BRACKET" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | LEFT_S_BRACKET  -> "LEFT_S_BRACKET" 
  | RIGHT_S_BRACKET  -> "RIGHT_S_BRACKET" 
  | IDENTITY _ -> "IDENTITY" 
  | STRING _ -> "STRING" 
  | REAL _ -> "REAL" 
  | BOOL _ -> "BOOL" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | EQUAL_EQUAL  -> (null : System.Object) 
  | UN_EQUAL  -> (null : System.Object) 
  | LESS  -> (null : System.Object) 
  | LESS_EQ  -> (null : System.Object) 
  | GREATER  -> (null : System.Object) 
  | GREATER_EQ  -> (null : System.Object) 
  | LESS_DOT  -> (null : System.Object) 
  | LESS_EQ_DOT  -> (null : System.Object) 
  | GREATER_DOT  -> (null : System.Object) 
  | GREATER_EQ_DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | MULTIPLE  -> (null : System.Object) 
  | DIVIDE  -> (null : System.Object) 
  | REMAINDER  -> (null : System.Object) 
  | PLUS_DOT  -> (null : System.Object) 
  | MINUS_DOT  -> (null : System.Object) 
  | MULTIPLE_DOT  -> (null : System.Object) 
  | DIVIDE_DOT  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | RIGHT_ARROW  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | PLUS_PLUS  -> (null : System.Object) 
  | AT  -> (null : System.Object) 
  | LEFT_BRACKET  -> (null : System.Object) 
  | RIGHT_BRACKET  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | LEFT_S_BRACKET  -> (null : System.Object) 
  | RIGHT_S_BRACKET  -> (null : System.Object) 
  | IDENTITY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | REAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 1us; 65535us; 2us; 3us; 109us; 65535us; 2us; 144us; 4us; 144us; 8us; 144us; 19us; 144us; 20us; 144us; 21us; 144us; 23us; 144us; 24us; 144us; 25us; 144us; 27us; 144us; 32us; 144us; 33us; 144us; 34us; 144us; 35us; 144us; 36us; 144us; 37us; 144us; 38us; 144us; 39us; 144us; 40us; 144us; 41us; 144us; 42us; 144us; 43us; 144us; 44us; 144us; 45us; 144us; 46us; 144us; 47us; 144us; 48us; 144us; 49us; 144us; 50us; 144us; 51us; 144us; 52us; 144us; 53us; 144us; 54us; 144us; 55us; 144us; 56us; 144us; 57us; 144us; 58us; 144us; 59us; 144us; 60us; 144us; 61us; 144us; 62us; 144us; 63us; 144us; 64us; 144us; 65us; 144us; 66us; 144us; 67us; 144us; 68us; 144us; 69us; 144us; 70us; 144us; 71us; 144us; 72us; 144us; 73us; 144us; 74us; 144us; 75us; 144us; 76us; 144us; 77us; 144us; 78us; 144us; 79us; 144us; 80us; 144us; 81us; 144us; 82us; 144us; 83us; 144us; 84us; 144us; 85us; 144us; 86us; 144us; 87us; 144us; 88us; 144us; 89us; 144us; 90us; 144us; 91us; 144us; 92us; 144us; 93us; 144us; 94us; 144us; 95us; 144us; 96us; 144us; 97us; 144us; 98us; 144us; 99us; 144us; 100us; 144us; 101us; 144us; 102us; 144us; 103us; 144us; 104us; 144us; 110us; 144us; 114us; 144us; 117us; 144us; 122us; 144us; 132us; 144us; 134us; 144us; 138us; 144us; 142us; 144us; 150us; 144us; 151us; 144us; 152us; 144us; 156us; 144us; 157us; 144us; 158us; 144us; 160us; 144us; 161us; 144us; 163us; 144us; 164us; 144us; 166us; 144us; 167us; 144us; 169us; 144us; 170us; 144us; 172us; 144us; 173us; 144us; 178us; 144us; 184us; 144us; 2us; 65535us; 14us; 15us; 159us; 165us; 5us; 65535us; 13us; 18us; 16us; 18us; 17us; 18us; 159us; 162us; 168us; 171us; 2us; 65535us; 8us; 148us; 21us; 22us; 2us; 65535us; 25us; 26us; 27us; 30us; 109us; 65535us; 2us; 147us; 4us; 147us; 8us; 147us; 19us; 147us; 20us; 147us; 21us; 147us; 23us; 147us; 24us; 147us; 25us; 147us; 27us; 147us; 32us; 147us; 33us; 147us; 34us; 147us; 35us; 147us; 36us; 147us; 37us; 147us; 38us; 147us; 39us; 147us; 40us; 147us; 41us; 147us; 42us; 147us; 43us; 147us; 44us; 147us; 45us; 147us; 46us; 147us; 47us; 147us; 48us; 147us; 49us; 147us; 50us; 147us; 51us; 147us; 52us; 147us; 53us; 147us; 54us; 147us; 55us; 147us; 56us; 147us; 57us; 147us; 58us; 147us; 59us; 147us; 60us; 147us; 61us; 147us; 62us; 147us; 63us; 147us; 64us; 147us; 65us; 147us; 66us; 147us; 67us; 147us; 68us; 147us; 69us; 147us; 70us; 147us; 71us; 147us; 72us; 147us; 73us; 147us; 74us; 147us; 75us; 147us; 76us; 147us; 77us; 147us; 78us; 147us; 79us; 147us; 80us; 147us; 81us; 147us; 82us; 147us; 83us; 147us; 84us; 147us; 85us; 147us; 86us; 147us; 87us; 147us; 88us; 147us; 89us; 147us; 90us; 147us; 91us; 147us; 92us; 147us; 93us; 147us; 94us; 147us; 95us; 147us; 96us; 147us; 97us; 147us; 98us; 147us; 99us; 147us; 100us; 147us; 101us; 147us; 102us; 147us; 103us; 147us; 104us; 147us; 110us; 147us; 114us; 147us; 117us; 147us; 122us; 147us; 132us; 147us; 134us; 147us; 138us; 147us; 142us; 147us; 150us; 147us; 151us; 147us; 152us; 147us; 156us; 147us; 157us; 147us; 158us; 147us; 160us; 147us; 161us; 147us; 163us; 147us; 164us; 147us; 166us; 147us; 167us; 147us; 169us; 147us; 170us; 147us; 172us; 147us; 173us; 147us; 178us; 147us; 184us; 147us; 109us; 65535us; 2us; 146us; 4us; 146us; 8us; 146us; 19us; 146us; 20us; 146us; 21us; 146us; 23us; 146us; 24us; 146us; 25us; 146us; 27us; 146us; 32us; 146us; 33us; 146us; 34us; 146us; 35us; 146us; 36us; 146us; 37us; 146us; 38us; 146us; 39us; 146us; 40us; 146us; 41us; 146us; 42us; 146us; 43us; 146us; 44us; 146us; 45us; 146us; 46us; 146us; 47us; 146us; 48us; 146us; 49us; 146us; 50us; 146us; 51us; 146us; 52us; 146us; 53us; 146us; 54us; 146us; 55us; 146us; 56us; 146us; 57us; 146us; 58us; 146us; 59us; 146us; 60us; 146us; 61us; 146us; 62us; 146us; 63us; 146us; 64us; 146us; 65us; 146us; 66us; 146us; 67us; 146us; 68us; 146us; 69us; 146us; 70us; 146us; 71us; 146us; 72us; 146us; 73us; 146us; 74us; 146us; 75us; 146us; 76us; 146us; 77us; 146us; 78us; 146us; 79us; 146us; 80us; 146us; 81us; 146us; 82us; 146us; 83us; 146us; 84us; 146us; 85us; 146us; 86us; 146us; 87us; 146us; 88us; 146us; 89us; 146us; 90us; 146us; 91us; 146us; 92us; 146us; 93us; 146us; 94us; 146us; 95us; 146us; 96us; 146us; 97us; 146us; 98us; 146us; 99us; 146us; 100us; 146us; 101us; 146us; 102us; 146us; 103us; 146us; 104us; 146us; 110us; 146us; 114us; 146us; 117us; 146us; 122us; 146us; 132us; 146us; 134us; 146us; 138us; 146us; 142us; 146us; 150us; 146us; 151us; 146us; 152us; 146us; 156us; 146us; 157us; 146us; 158us; 146us; 160us; 146us; 161us; 146us; 163us; 146us; 164us; 146us; 166us; 146us; 167us; 146us; 169us; 146us; 170us; 146us; 172us; 146us; 173us; 146us; 178us; 146us; 184us; 146us; 109us; 65535us; 2us; 153us; 4us; 153us; 8us; 153us; 19us; 153us; 20us; 153us; 21us; 153us; 23us; 153us; 24us; 153us; 25us; 153us; 27us; 153us; 32us; 153us; 33us; 153us; 34us; 153us; 35us; 153us; 36us; 153us; 37us; 153us; 38us; 153us; 39us; 153us; 40us; 153us; 41us; 153us; 42us; 153us; 43us; 153us; 44us; 153us; 45us; 153us; 46us; 153us; 47us; 153us; 48us; 153us; 49us; 153us; 50us; 153us; 51us; 153us; 52us; 153us; 53us; 153us; 54us; 153us; 55us; 153us; 56us; 153us; 57us; 153us; 58us; 153us; 59us; 153us; 60us; 153us; 61us; 153us; 62us; 153us; 63us; 153us; 64us; 153us; 65us; 153us; 66us; 153us; 67us; 153us; 68us; 153us; 69us; 153us; 70us; 153us; 71us; 153us; 72us; 153us; 73us; 153us; 74us; 153us; 75us; 153us; 76us; 153us; 77us; 153us; 78us; 153us; 79us; 153us; 80us; 153us; 81us; 153us; 82us; 153us; 83us; 153us; 84us; 153us; 85us; 153us; 86us; 153us; 87us; 153us; 88us; 153us; 89us; 153us; 90us; 153us; 91us; 153us; 92us; 153us; 93us; 153us; 94us; 153us; 95us; 153us; 96us; 153us; 97us; 153us; 98us; 153us; 99us; 153us; 100us; 153us; 101us; 153us; 102us; 153us; 103us; 153us; 104us; 153us; 110us; 153us; 114us; 153us; 117us; 153us; 122us; 153us; 132us; 153us; 134us; 153us; 138us; 153us; 142us; 153us; 150us; 153us; 151us; 153us; 152us; 153us; 156us; 153us; 157us; 153us; 158us; 153us; 160us; 153us; 161us; 153us; 163us; 153us; 164us; 153us; 166us; 153us; 167us; 153us; 169us; 153us; 170us; 153us; 172us; 153us; 173us; 153us; 178us; 153us; 184us; 153us; 3us; 65535us; 126us; 126us; 176us; 126us; 182us; 126us; 3us; 65535us; 126us; 127us; 176us; 177us; 182us; 183us; 3us; 65535us; 129us; 130us; 135us; 136us; 179us; 180us; 2us; 65535us; 106us; 139us; 140us; 139us; 2us; 65535us; 106us; 185us; 140us; 141us; 109us; 65535us; 2us; 142us; 4us; 142us; 8us; 142us; 19us; 142us; 20us; 142us; 21us; 142us; 23us; 142us; 24us; 142us; 25us; 142us; 27us; 142us; 32us; 142us; 33us; 142us; 34us; 142us; 35us; 142us; 36us; 142us; 37us; 142us; 38us; 142us; 39us; 142us; 40us; 142us; 41us; 142us; 42us; 142us; 43us; 142us; 44us; 142us; 45us; 142us; 46us; 142us; 47us; 142us; 48us; 142us; 49us; 142us; 50us; 142us; 51us; 142us; 52us; 142us; 53us; 142us; 54us; 142us; 55us; 142us; 56us; 142us; 57us; 142us; 58us; 142us; 59us; 142us; 60us; 142us; 61us; 142us; 62us; 142us; 63us; 142us; 64us; 142us; 65us; 142us; 66us; 142us; 67us; 142us; 68us; 142us; 69us; 142us; 70us; 142us; 71us; 142us; 72us; 142us; 73us; 142us; 74us; 142us; 75us; 142us; 76us; 142us; 77us; 142us; 78us; 142us; 79us; 142us; 80us; 142us; 81us; 142us; 82us; 142us; 83us; 142us; 84us; 142us; 85us; 142us; 86us; 142us; 87us; 142us; 88us; 142us; 89us; 142us; 90us; 142us; 91us; 142us; 92us; 142us; 93us; 142us; 94us; 142us; 95us; 142us; 96us; 142us; 97us; 142us; 98us; 142us; 99us; 142us; 100us; 142us; 101us; 142us; 102us; 142us; 103us; 142us; 104us; 142us; 110us; 142us; 114us; 142us; 117us; 142us; 122us; 142us; 132us; 142us; 134us; 142us; 138us; 142us; 142us; 142us; 150us; 142us; 151us; 142us; 152us; 142us; 156us; 142us; 157us; 142us; 158us; 142us; 160us; 142us; 161us; 142us; 163us; 142us; 164us; 142us; 166us; 142us; 167us; 142us; 169us; 142us; 170us; 142us; 172us; 142us; 173us; 142us; 178us; 142us; 184us; 142us; 109us; 65535us; 2us; 4us; 4us; 63us; 8us; 20us; 19us; 63us; 20us; 63us; 21us; 19us; 23us; 63us; 24us; 63us; 25us; 23us; 27us; 24us; 32us; 63us; 33us; 63us; 34us; 63us; 35us; 63us; 36us; 63us; 37us; 63us; 38us; 63us; 39us; 63us; 40us; 63us; 41us; 63us; 42us; 63us; 43us; 63us; 44us; 63us; 45us; 63us; 46us; 63us; 47us; 63us; 48us; 63us; 49us; 63us; 50us; 63us; 51us; 63us; 52us; 63us; 53us; 63us; 54us; 63us; 55us; 63us; 56us; 63us; 57us; 63us; 58us; 63us; 59us; 63us; 60us; 63us; 61us; 63us; 62us; 63us; 63us; 63us; 64us; 63us; 65us; 63us; 66us; 63us; 67us; 63us; 68us; 63us; 69us; 63us; 70us; 63us; 71us; 63us; 72us; 63us; 73us; 63us; 74us; 63us; 75us; 63us; 76us; 63us; 77us; 63us; 78us; 63us; 79us; 63us; 80us; 63us; 81us; 63us; 82us; 32us; 83us; 33us; 84us; 34us; 85us; 35us; 86us; 36us; 87us; 37us; 88us; 38us; 89us; 39us; 90us; 40us; 91us; 41us; 92us; 42us; 93us; 43us; 94us; 44us; 95us; 45us; 96us; 46us; 97us; 47us; 98us; 48us; 99us; 49us; 100us; 50us; 101us; 51us; 102us; 52us; 103us; 53us; 104us; 54us; 110us; 55us; 114us; 56us; 117us; 57us; 122us; 58us; 132us; 59us; 134us; 60us; 138us; 61us; 142us; 62us; 150us; 64us; 151us; 65us; 152us; 66us; 156us; 67us; 157us; 68us; 158us; 69us; 160us; 70us; 161us; 71us; 163us; 72us; 164us; 73us; 166us; 74us; 167us; 75us; 169us; 76us; 170us; 77us; 172us; 78us; 173us; 79us; 178us; 80us; 184us; 81us; 2us; 65535us; 188us; 189us; 193us; 200us; 2us; 65535us; 191us; 192us; 203us; 204us; 8us; 65535us; 0us; 1us; 124us; 125us; 188us; 186us; 191us; 190us; 193us; 187us; 197us; 195us; 198us; 196us; 203us; 190us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 4us; 114us; 117us; 123us; 126us; 129us; 239us; 349us; 459us; 463us; 467us; 471us; 474us; 477us; 587us; 697us; 700us; 703us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 2us; 0us; 80us; 1us; 1us; 1us; 1us; 24us; 2us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 1us; 2us; 1us; 3us; 1us; 4us; 3us; 5us; 57us; 62us; 1us; 5us; 1us; 6us; 1us; 7us; 3us; 8us; 9us; 9us; 5us; 8us; 9us; 10us; 11us; 67us; 2us; 8us; 9us; 1us; 8us; 3us; 10us; 11us; 11us; 3us; 10us; 11us; 70us; 1us; 10us; 26us; 12us; 13us; 13us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 26us; 12us; 13us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 57us; 2us; 12us; 13us; 1us; 12us; 26us; 14us; 15us; 15us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 26us; 14us; 15us; 17us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 2us; 14us; 15us; 1us; 14us; 3us; 16us; 17us; 18us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 18us; 24us; 19us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 36us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 37us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 38us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 39us; 40us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 40us; 55us; 26us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 41us; 42us; 55us; 74us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 41us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 41us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 42us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 42us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 49us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 50us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 51us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 54us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 55us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 63us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 63us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 63us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 65us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 66us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 66us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 67us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 67us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 68us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 68us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 69us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 69us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 70us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 70us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 71us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 71us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 72us; 24us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 55us; 73us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 3us; 41us; 42us; 74us; 3us; 41us; 42us; 74us; 3us; 41us; 42us; 74us; 4us; 41us; 49us; 50us; 51us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 2us; 43us; 44us; 2us; 43us; 44us; 2us; 44us; 80us; 2us; 45us; 46us; 1us; 45us; 2us; 47us; 48us; 1us; 47us; 1us; 47us; 3us; 49us; 50us; 51us; 1us; 49us; 1us; 50us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 51us; 2us; 52us; 53us; 1us; 52us; 1us; 52us; 2us; 54us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 65us; 1us; 65us; 1us; 66us; 1us; 66us; 5us; 67us; 68us; 69us; 70us; 71us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 69us; 1us; 69us; 1us; 69us; 2us; 70us; 71us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 71us; 2us; 72us; 73us; 2us; 72us; 73us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 74us; 4us; 75us; 76us; 76us; 80us; 4us; 75us; 76us; 79us; 80us; 2us; 75us; 76us; 1us; 75us; 3us; 77us; 78us; 80us; 1us; 77us; 1us; 77us; 2us; 79us; 82us; 1us; 79us; 2us; 80us; 80us; 2us; 80us; 81us; 1us; 80us; 1us; 81us; 1us; 81us; 1us; 82us; 1us; 82us; 2us; 83us; 84us; 1us; 83us; 1us; 83us; 1us; 83us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 5us; 7us; 9us; 34us; 36us; 38us; 40us; 44us; 46us; 48us; 50us; 54us; 60us; 63us; 65us; 69us; 73us; 75us; 102us; 129us; 132us; 134us; 161us; 188us; 191us; 193us; 197us; 199us; 201us; 203us; 205us; 230us; 255us; 280us; 305us; 330us; 355us; 380us; 405us; 430us; 455us; 480us; 505us; 530us; 555us; 580us; 605us; 630us; 655us; 680us; 705us; 730us; 755us; 782us; 807us; 832us; 857us; 882us; 907us; 932us; 957us; 982us; 1007us; 1032us; 1057us; 1082us; 1107us; 1132us; 1157us; 1182us; 1207us; 1232us; 1257us; 1282us; 1307us; 1332us; 1357us; 1382us; 1407us; 1432us; 1457us; 1459us; 1461us; 1463us; 1465us; 1467us; 1469us; 1471us; 1473us; 1475us; 1477us; 1479us; 1481us; 1483us; 1485us; 1487us; 1489us; 1491us; 1493us; 1495us; 1497us; 1499us; 1501us; 1505us; 1509us; 1513us; 1518us; 1520us; 1522us; 1524us; 1526us; 1528us; 1530us; 1532us; 1534us; 1536us; 1538us; 1540us; 1542us; 1544us; 1546us; 1548us; 1551us; 1554us; 1557us; 1560us; 1562us; 1565us; 1567us; 1569us; 1573us; 1575us; 1577us; 1579us; 1581us; 1583us; 1585us; 1587us; 1590us; 1592us; 1594us; 1597us; 1599us; 1601us; 1603us; 1605us; 1607us; 1609us; 1611us; 1613us; 1615us; 1617us; 1619us; 1621us; 1623us; 1625us; 1627us; 1629us; 1635us; 1637us; 1639us; 1641us; 1643us; 1645us; 1647us; 1649us; 1651us; 1654us; 1656us; 1658us; 1660us; 1662us; 1664us; 1667us; 1670us; 1672us; 1674us; 1676us; 1678us; 1680us; 1682us; 1684us; 1686us; 1688us; 1690us; 1695us; 1700us; 1703us; 1705us; 1709us; 1711us; 1713us; 1716us; 1718us; 1721us; 1724us; 1726us; 1728us; 1730us; 1732us; 1734us; 1737us; 1739us; 1741us; |]
let _fsyacc_action_rows = 206
let _fsyacc_actionTableElements = [|3us; 32768us; 37us; 193us; 41us; 198us; 43us; 202us; 1us; 49152us; 26us; 197us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 0us; 49152us; 36us; 32768us; 0us; 5us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 0us; 16386us; 0us; 16387us; 0us; 16388us; 14us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 38us; 9us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 1us; 16393us; 39us; 14us; 3us; 32768us; 23us; 160us; 39us; 14us; 43us; 16us; 1us; 32768us; 43us; 12us; 0us; 16392us; 1us; 16395us; 43us; 16us; 2us; 32768us; 23us; 169us; 43us; 16us; 0us; 16394us; 36us; 16397us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 39us; 21us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 37us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 38us; 143us; 39us; 21us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 0us; 16396us; 36us; 16399us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 40us; 25us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 37us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 40us; 25us; 41us; 27us; 42us; 29us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 0us; 16398us; 14us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 42us; 28us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 0us; 16400us; 0us; 16401us; 1us; 32768us; 42us; 31us; 0us; 16402us; 12us; 16403us; 13us; 84us; 14us; 85us; 15us; 86us; 18us; 98us; 19us; 99us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 12us; 16404us; 13us; 84us; 14us; 85us; 15us; 86us; 18us; 98us; 19us; 99us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 7us; 16405us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 7us; 16406us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 7us; 16407us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16408us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16409us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16410us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16411us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16412us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16413us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 17us; 16414us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 18us; 16415us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 18us; 16416us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 12us; 16417us; 13us; 84us; 14us; 85us; 15us; 86us; 18us; 98us; 19us; 99us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 12us; 16418us; 13us; 84us; 14us; 85us; 15us; 86us; 18us; 98us; 19us; 99us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 7us; 16419us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 7us; 16420us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16421us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16422us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16423us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 19us; 16424us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 31us; 105us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 32us; 111us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 35us; 16425us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 32us; 118us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 35us; 16426us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 35us; 16433us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 35us; 16434us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 35us; 16435us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 0us; 16438us; 0us; 16439us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 28us; 151us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 29us; 152us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 30us; 16447us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 27us; 150us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 35us; 16449us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 24us; 158us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 34us; 16450us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 24us; 161us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 34us; 16451us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 24us; 164us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 34us; 16452us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 24us; 167us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 34us; 16453us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 24us; 170us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 34us; 16454us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 36us; 32768us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 24us; 173us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 34us; 16455us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 34us; 16456us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 34us; 16457us; 1us; 87us; 2us; 88us; 3us; 89us; 4us; 90us; 5us; 91us; 6us; 92us; 7us; 100us; 8us; 101us; 9us; 102us; 10us; 103us; 11us; 82us; 12us; 83us; 13us; 84us; 14us; 85us; 15us; 86us; 16us; 96us; 17us; 97us; 18us; 98us; 19us; 99us; 20us; 157us; 21us; 159us; 27us; 150us; 30us; 104us; 33us; 174us; 34us; 93us; 35us; 94us; 36us; 95us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 32us; 106us; 2us; 32768us; 41us; 115us; 43us; 107us; 4us; 32768us; 26us; 132us; 34us; 108us; 37us; 135us; 43us; 133us; 1us; 32768us; 43us; 109us; 1us; 32768us; 26us; 110us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 41us; 112us; 1us; 32768us; 42us; 113us; 1us; 32768us; 26us; 114us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 42us; 116us; 1us; 32768us; 26us; 117us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 43us; 119us; 1us; 32768us; 34us; 120us; 1us; 32768us; 43us; 121us; 1us; 32768us; 26us; 122us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 43us; 124us; 3us; 16427us; 37us; 193us; 41us; 198us; 43us; 202us; 1us; 16428us; 26us; 197us; 1us; 16430us; 32us; 123us; 0us; 16429us; 1us; 16432us; 39us; 129us; 1us; 32768us; 43us; 128us; 0us; 16431us; 3us; 32768us; 26us; 132us; 37us; 135us; 43us; 133us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 26us; 134us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 43us; 128us; 1us; 32768us; 38us; 137us; 1us; 32768us; 26us; 138us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 16437us; 32us; 140us; 1us; 32768us; 43us; 131us; 0us; 16436us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 1us; 32768us; 38us; 149us; 0us; 16446us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 0us; 16448us; 1us; 32768us; 43us; 155us; 1us; 32768us; 26us; 156us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 2us; 32768us; 22us; 168us; 43us; 13us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 23us; 163us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 23us; 166us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 43us; 17us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 23us; 172us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 43us; 175us; 2us; 32768us; 3us; 179us; 23us; 176us; 1us; 32768us; 32us; 123us; 1us; 32768us; 24us; 178us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 1us; 32768us; 43us; 128us; 1us; 32768us; 5us; 181us; 1us; 32768us; 23us; 182us; 1us; 32768us; 32us; 123us; 1us; 32768us; 24us; 184us; 13us; 32768us; 20us; 157us; 21us; 159us; 25us; 154us; 27us; 150us; 30us; 104us; 33us; 174us; 37us; 8us; 41us; 27us; 43us; 145us; 44us; 10us; 45us; 11us; 46us; 7us; 47us; 6us; 0us; 16458us; 2us; 16460us; 26us; 197us; 39us; 188us; 3us; 32768us; 26us; 197us; 38us; 194us; 39us; 188us; 3us; 32768us; 37us; 193us; 41us; 198us; 43us; 202us; 0us; 16459us; 2us; 16462us; 26us; 197us; 39us; 191us; 3us; 32768us; 37us; 193us; 41us; 198us; 43us; 202us; 0us; 16461us; 3us; 32768us; 37us; 193us; 41us; 198us; 43us; 202us; 0us; 16463us; 1us; 16464us; 26us; 197us; 2us; 32768us; 26us; 197us; 42us; 199us; 3us; 32768us; 37us; 193us; 41us; 198us; 43us; 202us; 3us; 32768us; 37us; 193us; 41us; 198us; 43us; 202us; 0us; 16465us; 1us; 32768us; 38us; 201us; 0us; 16466us; 1us; 16468us; 3us; 203us; 3us; 32768us; 37us; 193us; 41us; 198us; 43us; 202us; 1us; 32768us; 5us; 205us; 0us; 16467us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 6us; 20us; 21us; 58us; 59us; 60us; 61us; 76us; 77us; 78us; 79us; 81us; 85us; 87us; 88us; 90us; 93us; 94us; 131us; 169us; 183us; 184us; 221us; 259us; 273us; 274us; 289us; 290us; 291us; 293us; 294us; 307us; 320us; 328us; 336us; 344us; 364us; 384us; 404us; 424us; 444us; 464us; 482us; 501us; 520us; 533us; 546us; 554us; 562us; 582us; 602us; 622us; 642us; 679us; 716us; 752us; 789us; 825us; 861us; 897us; 933us; 934us; 935us; 972us; 1009us; 1040us; 1076us; 1113us; 1148us; 1185us; 1220us; 1257us; 1292us; 1329us; 1364us; 1401us; 1436us; 1473us; 1508us; 1543us; 1578us; 1592us; 1606us; 1620us; 1634us; 1648us; 1662us; 1676us; 1690us; 1704us; 1718us; 1732us; 1746us; 1760us; 1774us; 1788us; 1802us; 1816us; 1830us; 1844us; 1858us; 1872us; 1886us; 1900us; 1902us; 1905us; 1910us; 1912us; 1914us; 1928us; 1930us; 1932us; 1934us; 1948us; 1950us; 1952us; 1966us; 1968us; 1970us; 1972us; 1974us; 1988us; 1990us; 1994us; 1996us; 1998us; 1999us; 2001us; 2003us; 2004us; 2008us; 2022us; 2024us; 2038us; 2040us; 2042us; 2044us; 2058us; 2060us; 2062us; 2063us; 2064us; 2065us; 2066us; 2067us; 2068us; 2069us; 2071us; 2072us; 2086us; 2100us; 2114us; 2115us; 2117us; 2119us; 2133us; 2147us; 2161us; 2164us; 2178us; 2192us; 2194us; 2208us; 2222us; 2224us; 2238us; 2252us; 2254us; 2268us; 2282us; 2284us; 2298us; 2312us; 2314us; 2317us; 2319us; 2321us; 2335us; 2337us; 2339us; 2341us; 2343us; 2345us; 2359us; 2360us; 2363us; 2367us; 2371us; 2372us; 2375us; 2379us; 2380us; 2384us; 2385us; 2387us; 2390us; 2394us; 2398us; 2399us; 2401us; 2402us; 2404us; 2408us; 2410us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 14us; 14us; 2us; 3us; 2us; 1us; 3us; 1us; 3us; 4us; 6us; 3us; 1us; 2us; 2us; 1us; 3us; 1us; 1us; 1us; 1us; 3us; 6us; 1us; 4us; 4us; 6us; 6us; 6us; 7us; 7us; 6us; 9us; 5us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 4us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 8us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 10us; 10us; 11us; 11us; 12us; 12us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 20us; 20us; |]
let _fsyacc_immediateActions = [|65535us; 65535us; 65535us; 49152us; 65535us; 16386us; 16387us; 16388us; 65535us; 16389us; 16390us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 16394us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16398us; 65535us; 16400us; 16401us; 65535us; 16402us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16436us; 65535us; 16441us; 16442us; 16443us; 16444us; 16445us; 65535us; 16446us; 65535us; 65535us; 65535us; 16448us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16458us; 65535us; 65535us; 65535us; 16459us; 65535us; 65535us; 16461us; 65535us; 16463us; 65535us; 65535us; 65535us; 65535us; 16465us; 65535us; 16466us; 65535us; 65535us; 65535us; 16467us; |]
let _fsyacc_reductions ()  =    [| 
# 466 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> TExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__starttexpr));
# 475 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startprogram));
# 484 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 ".\HindleyMilner\Parser.fsy"
                                    _1 
                   )
# 65 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 495 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 ".\HindleyMilner\Parser.fsy"
                                                      LInt _1 
                   )
# 68 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_literature));
# 506 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 ".\HindleyMilner\Parser.fsy"
                                                      LBool _1 
                   )
# 69 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_literature));
# 517 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 ".\HindleyMilner\Parser.fsy"
                                                      LUnit 
                   )
# 70 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_literature));
# 527 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 ".\HindleyMilner\Parser.fsy"
                                                      LString _1 
                   )
# 71 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_literature));
# 538 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> double in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 ".\HindleyMilner\Parser.fsy"
                                                      LReal _1 
                   )
# 72 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_literature));
# 549 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_idTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 ".\HindleyMilner\Parser.fsy"
                                                   _1 :: _3 
                   )
# 75 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_idTuple));
# 561 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 ".\HindleyMilner\Parser.fsy"
                                                   [_1; _3] 
                   )
# 76 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_idTuple));
# 573 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_identities in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 ".\HindleyMilner\Parser.fsy"
                                               _1 :: _2 
                   )
# 79 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_identities));
# 585 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 ".\HindleyMilner\Parser.fsy"
                                               [_1; _2] 
                   )
# 80 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_identities));
# 597 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 ".\HindleyMilner\Parser.fsy"
                                            _1 :: _3 
                   )
# 83 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_tuple));
# 609 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 ".\HindleyMilner\Parser.fsy"
                                            [_1; _3] 
                   )
# 84 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_tuple));
# 621 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_list' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 ".\HindleyMilner\Parser.fsy"
                                                _1 :: _3 
                   )
# 87 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_list'));
# 633 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 ".\HindleyMilner\Parser.fsy"
                                                [_1; _3] 
                   )
# 88 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_list'));
# 645 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 ".\HindleyMilner\Parser.fsy"
                                                                List [] 
                   )
# 91 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_list));
# 655 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 ".\HindleyMilner\Parser.fsy"
                                                                List [_2] 
                   )
# 92 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_list));
# 666 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_list' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 ".\HindleyMilner\Parser.fsy"
                                                                List _2 
                   )
# 93 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_list));
# 677 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "+"  _3 
                   )
# 96 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 689 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "-"  _3 
                   )
# 97 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 701 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "*"  _3 
                   )
# 98 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 713 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "/"  _3 
                   )
# 99 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 725 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "%"  _3 
                   )
# 100 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 737 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "==" _3 
                   )
# 101 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 749 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "!=" _3 
                   )
# 102 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 761 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "<"  _3 
                   )
# 103 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 773 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "<=" _3 
                   )
# 104 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 785 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 ">"  _3 
                   )
# 105 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 797 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 ">=" _3 
                   )
# 106 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 809 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "::" _3 
                   )
# 107 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 821 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "++" _3 
                   )
# 108 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 833 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "@"  _3 
                   )
# 109 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 845 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "+." _3 
                   )
# 110 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 857 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "-." _3 
                   )
# 111 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 869 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "*." _3 
                   )
# 112 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 881 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "/." _3 
                   )
# 113 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 893 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "<."  _3 
                   )
# 114 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 905 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 "<=." _3 
                   )
# 115 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 917 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 ">."  _3 
                   )
# 116 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 929 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 ".\HindleyMilner\Parser.fsy"
                                                    createBinaryOp _1 ">=." _3 
                   )
# 117 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_binaryOp));
# 941 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Expr in
            let _5 = parseState.GetInput(5) :?> string in
            let _7 = parseState.GetInput(7) :?> string in
            let _9 = parseState.GetInput(9) :?> Expr in
            let _14 = parseState.GetInput(14) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 ".\HindleyMilner\Parser.fsy"
                           CaseList (_2, _5, _7, _9, _14) 
                   )
# 123 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_caseList));
# 956 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Expr in
            let _8 = parseState.GetInput(8) :?> Expr in
            let _10 = parseState.GetInput(10) :?> string in
            let _12 = parseState.GetInput(12) :?> string in
            let _14 = parseState.GetInput(14) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 ".\HindleyMilner\Parser.fsy"
                           CaseList (_2, _10, _12, _14, _8) 
                   )
# 127 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_caseList));
# 971 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 ".\HindleyMilner\Parser.fsy"
                                               (_2, None) 
                   )
# 130 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_constructor));
# 982 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> TExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 ".\HindleyMilner\Parser.fsy"
                                               (_2, Some _3) 
                   )
# 131 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_constructor));
# 994 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _2 = parseState.GetInput(2) :?> 'gentype_constructors in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 ".\HindleyMilner\Parser.fsy"
                                                    _1 :: _2 
                   )
# 134 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_constructors));
# 1006 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\HindleyMilner\Parser.fsy"
                                                    [_1] 
                   )
# 135 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_constructors));
# 1017 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_identityTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 ".\HindleyMilner\Parser.fsy"
                                                        _1 :: _3 
                   )
# 138 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_identityTuple));
# 1029 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 ".\HindleyMilner\Parser.fsy"
                                                        [_1] 
                   )
# 139 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_identityTuple));
# 1040 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 ".\HindleyMilner\Parser.fsy"
                                                                                              (_1, [], _3) 
                   )
# 142 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_caseBranche));
# 1052 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 ".\HindleyMilner\Parser.fsy"
                                                                                              (_1, [_2], _4) 
                   )
# 143 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_caseBranche));
# 1065 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_identityTuple in
            let _6 = parseState.GetInput(6) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\HindleyMilner\Parser.fsy"
                                                                                              (_1, _3, _6) 
                   )
# 144 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_caseBranche));
# 1078 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_caseBranche in
            let _3 = parseState.GetInput(3) :?> 'gentype_caseBranches in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 ".\HindleyMilner\Parser.fsy"
                                                         _1 :: _3 
                   )
# 147 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_caseBranches));
# 1090 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_caseBranche in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 ".\HindleyMilner\Parser.fsy"
                                                         [_1] 
                   )
# 148 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_caseBranches));
# 1101 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_apply in
            let _2 = parseState.GetInput(2) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 ".\HindleyMilner\Parser.fsy"
                                                  _1 @ [_2] 
                   )
# 151 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_apply));
# 1113 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Expr in
            let _2 = parseState.GetInput(2) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 ".\HindleyMilner\Parser.fsy"
                                                  [_1; _2]  
                   )
# 152 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_apply));
# 1125 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_apply in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 ".\HindleyMilner\Parser.fsy"
                                                                                               listToApply _1 
                   )
# 155 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1136 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 ".\HindleyMilner\Parser.fsy"
                                                                                               _2 
                   )
# 156 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1147 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_literature in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 ".\HindleyMilner\Parser.fsy"
                                                                                               Lit _1 
                   )
# 157 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1158 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 ".\HindleyMilner\Parser.fsy"
                                                                                               Val _1 
                   )
# 158 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1169 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binaryOp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 ".\HindleyMilner\Parser.fsy"
                                                                                               _1 
                   )
# 159 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1180 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 ".\HindleyMilner\Parser.fsy"
                                                                                               _1 
                   )
# 160 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1191 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 ".\HindleyMilner\Parser.fsy"
                                                                                               Tuple (List.head _2, List.tail _2) 
                   )
# 161 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1202 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Expr in
            let _4 = parseState.GetInput(4) :?> Expr in
            let _6 = parseState.GetInput(6) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 ".\HindleyMilner\Parser.fsy"
                                                                                               IfElse (_2, _4, _6) 
                   )
# 162 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1215 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_caseList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 ".\HindleyMilner\Parser.fsy"
                                                                                               _1 
                   )
# 163 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1226 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 ".\HindleyMilner\Parser.fsy"
                                                                                               Lam (_2, _4) 
                   )
# 164 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1238 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Expr in
            let _4 = parseState.GetInput(4) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 ".\HindleyMilner\Parser.fsy"
                                                                                               Let ("_", [], _2, _4) 
                   )
# 165 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1250 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> Expr in
            let _6 = parseState.GetInput(6) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 ".\HindleyMilner\Parser.fsy"
                                                                                               Let (_2, [], _4, _6) 
                   )
# 166 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1263 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_identities in
            let _4 = parseState.GetInput(4) :?> Expr in
            let _6 = parseState.GetInput(6) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 ".\HindleyMilner\Parser.fsy"
                                                                                               Let (List.head _2, [], createLam _4 (List.tail _2), _6) 
                   )
# 167 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1276 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_idTuple in
            let _4 = parseState.GetInput(4) :?> Expr in
            let _6 = parseState.GetInput(6) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 ".\HindleyMilner\Parser.fsy"
                                                                                               Let (List.head _2, List.tail _2, _4, _6) 
                   )
# 168 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1289 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> Expr in
            let _7 = parseState.GetInput(7) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 ".\HindleyMilner\Parser.fsy"
                                                                                               LetRec (_3, _5, _7) 
                   )
# 169 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1302 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_identities in
            let _5 = parseState.GetInput(5) :?> Expr in
            let _7 = parseState.GetInput(7) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 ".\HindleyMilner\Parser.fsy"
                                                                                               LetRec (List.head _3, createLam _5 (List.tail _3), _7) 
                   )
# 170 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1315 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_constructors in
            let _6 = parseState.GetInput(6) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 ".\HindleyMilner\Parser.fsy"
                                                                                               ADTDef (_2, [], _4, _6) 
                   )
# 171 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1328 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_identityTuple in
            let _7 = parseState.GetInput(7) :?> 'gentype_constructors in
            let _9 = parseState.GetInput(9) :?> Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 ".\HindleyMilner\Parser.fsy"
                                                                                               ADTDef (_2, _4, _7, _9) 
                   )
# 172 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1342 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_caseBranches in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 ".\HindleyMilner\Parser.fsy"
                                                                                               Case(_2, _5) 
                   )
# 173 ".\HindleyMilner\Parser.fsy"
                 : Expr));
# 1354 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> TExpr in
            let _3 = parseState.GetInput(3) :?> 'gentype_ttuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 ".\HindleyMilner\Parser.fsy"
                                              _1 :: _3 
                   )
# 177 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_ttuple));
# 1366 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> TExpr in
            let _3 = parseState.GetInput(3) :?> TExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 ".\HindleyMilner\Parser.fsy"
                                              [_1; _3] 
                   )
# 178 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_ttuple));
# 1378 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> TExpr in
            let _3 = parseState.GetInput(3) :?> 'gentype_adtParams in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 ".\HindleyMilner\Parser.fsy"
                                                 _1 :: _3 
                   )
# 181 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_adtParams));
# 1390 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> TExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 ".\HindleyMilner\Parser.fsy"
                                                 [_1] 
                   )
# 182 ".\HindleyMilner\Parser.fsy"
                 : 'gentype_adtParams));
# 1401 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> TExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 ".\HindleyMilner\Parser.fsy"
                                                                _2 
                   )
# 185 ".\HindleyMilner\Parser.fsy"
                 : TExpr));
# 1412 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> TExpr in
            let _3 = parseState.GetInput(3) :?> TExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 ".\HindleyMilner\Parser.fsy"
                                                                TEFun (_1, _3) 
                   )
# 186 ".\HindleyMilner\Parser.fsy"
                 : TExpr));
# 1424 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> TExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 ".\HindleyMilner\Parser.fsy"
                                                                TEList _2 
                   )
# 187 ".\HindleyMilner\Parser.fsy"
                 : TExpr));
# 1435 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ttuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 ".\HindleyMilner\Parser.fsy"
                                                                TETuple (List.head _2, List.tail _2) 
                   )
# 188 ".\HindleyMilner\Parser.fsy"
                 : TExpr));
# 1446 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_adtParams in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 ".\HindleyMilner\Parser.fsy"
                                                                TEADT (_1, _3) 
                   )
# 189 ".\HindleyMilner\Parser.fsy"
                 : TExpr));
# 1458 ".\HindleyMilner\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 ".\HindleyMilner\Parser.fsy"
                                                                TEVal _1 
                   )
# 190 ".\HindleyMilner\Parser.fsy"
                 : TExpr));
|]
# 1470 ".\HindleyMilner\Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 51;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let texpr lexer lexbuf : TExpr =
    engine lexer lexbuf 0 :?> _
let program lexer lexbuf : Expr =
    engine lexer lexbuf 2 :?> _
